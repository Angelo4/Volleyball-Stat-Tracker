"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.VictoryHistogram = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _victoryBar = require("victory-bar");

var _victoryCore = require("victory-core");

var _helperMethods = require("./helper-methods");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var fallbackProps = {
  width: 450,
  height: 300,
  padding: 50
};
var defaultData = [];

var VictoryHistogram = /*#__PURE__*/function (_React$Component) {
  _inherits(VictoryHistogram, _React$Component);

  var _super = _createSuper(VictoryHistogram);

  function VictoryHistogram() {
    _classCallCheck(this, VictoryHistogram);

    return _super.apply(this, arguments);
  }

  _createClass(VictoryHistogram, [{
    key: "shouldAnimate",
    value: // Overridden in native versions
    function shouldAnimate() {
      return !!this.props.animate;
    }
  }, {
    key: "render",
    value: function render() {
      var animationWhitelist = VictoryHistogram.animationWhitelist,
          role = VictoryHistogram.role;

      var props = _victoryCore.Helpers.modifyProps(this.props, fallbackProps, role);

      if (this.shouldAnimate()) {
        return this.animateComponent(props, animationWhitelist);
      }

      var children = this.renderData(props);
      var component = props.standalone ? this.renderContainer(props.containerComponent, children) : children;
      return _victoryCore.UserProps.withSafeUserProps(component, props);
    }
  }]);

  return VictoryHistogram;
}(_react.default.Component);

exports.VictoryHistogram = VictoryHistogram;
VictoryHistogram.animationWhitelist = ["data", "domain", "height", "padding", "style", "width"];
VictoryHistogram.displayName = "VictoryHistogram";
VictoryHistogram.role = "histogram";
VictoryHistogram.defaultTransitions = {
  onLoad: {
    duration: 2000,
    before: function () {
      return {
        _y: 0,
        _y1: 0,
        _y0: 0
      };
    },
    after: function (datum) {
      return {
        _y: datum._y,
        _y1: datum._y1,
        _y0: datum._y0
      };
    }
  },
  onExit: {
    duration: 500,
    before: function () {
      return {
        _y: 0,
        yOffset: 0
      };
    }
  },
  onEnter: {
    duration: 500,
    before: function () {
      return {
        _y: 0,
        _y1: 0,
        _y0: 0
      };
    },
    after: function (datum) {
      return {
        _y: datum._y,
        _y1: datum._y1,
        _y0: datum._y0
      };
    }
  }
};
VictoryHistogram.getFormattedData = _helperMethods.getFormattedData;
VictoryHistogram.propTypes = _objectSpread(_objectSpread(_objectSpread({}, _victoryCore.CommonProps.baseProps), _victoryCore.CommonProps.dataProps), {}, {
  binSpacing: _victoryCore.PropTypes.nonNegative,
  bins: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.instanceOf(Date)])), _victoryCore.PropTypes.nonNegative]),
  cornerRadius: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func, _propTypes.default.shape({
    top: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
    topLeft: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
    topRight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
    bottom: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
    bottomLeft: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func]),
    bottomRight: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.func])
  })]),
  getPath: _propTypes.default.func,
  horizontal: _propTypes.default.bool
});
VictoryHistogram.defaultProps = {
  containerComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.VictoryContainer, null),
  data: defaultData,
  dataComponent: /*#__PURE__*/_react.default.createElement(_victoryBar.Bar, null),
  groupComponent: /*#__PURE__*/_react.default.createElement("g", {
    role: "presentation"
  }),
  labelComponent: /*#__PURE__*/_react.default.createElement(_victoryCore.VictoryLabel, null),
  samples: 50,
  sortOrder: "ascending",
  standalone: true,
  theme: _victoryCore.VictoryTheme.grayscale
};
VictoryHistogram.getDomain = _helperMethods.getDomain;
VictoryHistogram.getData = _helperMethods.getData;

VictoryHistogram.getBaseProps = function (props) {
  return (0, _helperMethods.getBaseProps)(props, fallbackProps);
};

VictoryHistogram.expectedComponents = ["dataComponent", "labelComponent", "groupComponent", "containerComponent"];

var _default = (0, _victoryCore.addEvents)(VictoryHistogram);

exports.default = _default;
//# sourceMappingURL=victory-histogram.js.map