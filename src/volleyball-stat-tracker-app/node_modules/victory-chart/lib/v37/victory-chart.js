"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _victoryCore = require("victory-core");

var _victoryAxis = require("victory-axis");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DEFAULT_AXES = {
  independent: /*#__PURE__*/React.createElement(_victoryAxis.VictoryAxis, null),
  dependent: /*#__PURE__*/React.createElement(_victoryAxis.VictoryAxis, {
    dependentAxis: true
  })
}; // TODO: This does not accept data

var VictoryChart = function (_ref) {
  var _ref$defaultAxes = _ref.defaultAxes,
      defaultAxes = _ref$defaultAxes === void 0 ? DEFAULT_AXES : _ref$defaultAxes,
      _ref$groupComponent = _ref.groupComponent,
      groupComponent = _ref$groupComponent === void 0 ? /*#__PURE__*/React.createElement("g", null) : _ref$groupComponent,
      children = _ref.children;
  var scale = (0, _victoryCore.useScale)();
  var data = (0, _victoryCore.useData)();
  var domain = (0, _victoryCore.useDomain)();
  var axes = React.useMemo(function () {
    var _defaultAxes$DEFAULT_ = _objectSpread(_objectSpread({}, defaultAxes), DEFAULT_AXES),
        dependent = _defaultAxes$DEFAULT_.dependent,
        independent = _defaultAxes$DEFAULT_.independent;

    var axisProps = {
      data: data,
      domain: domain,
      // @ts-expect-error we need to fix this scale type
      scale: scale,
      standalone: false
    };
    return [/*#__PURE__*/React.cloneElement(dependent, _objectSpread(_objectSpread({}, axisProps), {}, {
      key: "dependent-axis"
    })), /*#__PURE__*/React.cloneElement(independent, _objectSpread(_objectSpread({}, axisProps), {}, {
      key: "independent-axis"
    }))];
  }, [defaultAxes, domain, scale, data]);
  var childComponents = React.Children.map(children, function (child, index) {
    // @ts-expect-error Why is this throwing a type error?
    return /*#__PURE__*/React.cloneElement(child, {
      key: "child-".concat(index),
      index: index,
      standalone: false
    });
  });
  return /*#__PURE__*/React.cloneElement(groupComponent, {}, axes, childComponents);
};

var _default = (0, _victoryCore.withContainer)(VictoryChart);

exports.default = _default;
//# sourceMappingURL=victory-chart.js.map