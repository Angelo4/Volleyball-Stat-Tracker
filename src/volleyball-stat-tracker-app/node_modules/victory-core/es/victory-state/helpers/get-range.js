var _excluded = ["range", "height", "width"];

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { getPadding } from "../../victory-util/helpers";
import { getValueForAxis, isTuple } from "../../victory-util/type-helpers";
// TODO: Should we store these defaults somewhere?
var DEFAULT_HEIGHT = 300;
var DEFAULT_WIDTH = 450; // TODO: This does not include polar range

export function getRange(_ref, axis) {
  var range = _ref.range,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? DEFAULT_HEIGHT : _ref$height,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? DEFAULT_WIDTH : _ref$width,
      props = _objectWithoutProperties(_ref, _excluded);

  var rangeFromProps = getValueForAxis(range, axis);

  if (isTuple(rangeFromProps)) {
    return rangeFromProps;
  } // TODO: Convert this to TS


  var padding = getPadding({
    padding: props.padding
  });
  var rangeForAxis = {
    x: [padding.left, width - padding.right],
    y: [height - padding.top, padding.bottom]
  };
  return rangeForAxis[axis];
}
//# sourceMappingURL=get-range.js.map