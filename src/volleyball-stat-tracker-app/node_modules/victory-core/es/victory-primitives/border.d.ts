import React from "react";
import PropTypes from "prop-types";
import { VictoryCommonPrimitiveProps } from "../victory-util/common-props";
export interface BorderProps extends VictoryCommonPrimitiveProps {
    width?: number;
    height?: number;
    rectComponent?: React.ReactElement;
    x?: number;
    y?: number;
}
export declare const Border: {
    (props: BorderProps): React.ReactElement<any, string | React.JSXElementConstructor<any>>;
    propTypes: {
        height: PropTypes.Requireable<number>;
        rectComponent: PropTypes.Requireable<PropTypes.ReactElementLike>;
        width: PropTypes.Requireable<number>;
        x: PropTypes.Requireable<number>;
        y: PropTypes.Requireable<number>;
        active?: React.Validator<boolean | null | undefined> | undefined;
        ariaLabel?: React.Validator<import("..").StringOrCallback | null | undefined> | undefined;
        className?: React.Validator<string | null | undefined> | undefined;
        clipPath?: React.Validator<string | null | undefined> | undefined;
        data?: React.Validator<any> | undefined;
        desc?: React.Validator<string | Function | null | undefined> | undefined;
        disableInlineStyles?: React.Validator<boolean | null | undefined> | undefined;
        events?: React.Validator<object | null | undefined> | undefined;
        id?: React.Validator<string | number | Function | null | undefined> | undefined;
        index?: React.Validator<string | number | null | undefined> | undefined;
        origin?: React.Validator<import("..").OriginType | null | undefined> | undefined;
        polar?: React.Validator<boolean | null | undefined> | undefined;
        role?: React.Validator<string | null | undefined> | undefined;
        scale?: React.Validator<any> | undefined;
        shapeRendering?: React.Validator<string | null | undefined> | undefined;
        style?: React.Validator<any> | undefined;
        tabIndex?: React.Validator<import("..").NumberOrCallback | null | undefined> | undefined;
        transform?: React.Validator<string | null | undefined> | undefined;
    };
    defaultProps: {
        rectComponent: JSX.Element;
        role: string;
        shapeRendering: string;
    };
};
//# sourceMappingURL=border.d.ts.map