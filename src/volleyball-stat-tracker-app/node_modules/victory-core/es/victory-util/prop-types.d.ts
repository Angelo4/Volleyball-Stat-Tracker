import PropTypes from "prop-types";
import { D3Scale, ScaleName } from "../types/prop-types";
/**
 * Return a new validator based on `propType` but which logs a `console.error`
 * with `explanation` if used.
 * @param {Function} propType The old, deprecated propType.
 * @param {String} explanation The message to provide the user of the deprecated propType.
 * @returns {Function} Validator which logs usage of this propType
 */
export declare function deprecated<T>(propType: PropTypes.Validator<T>, explanation: string): PropTypes.Validator<T>;
/**
 * Return a new validator which returns true
 * if and only if all validators passed as arguments return true.
 * Like React.propTypes.oneOfType, except "all" instead of "any"
 * @param {Array} validators Validation functions.
 * @returns {Function} Combined validator function
 */
export declare function allOfType<T>(validators: Array<PropTypes.Validator<T>>): PropTypes.Requireable<T | undefined>;
/**
 * Check that the value is a non-negative number.
 */
export declare const nonNegative: PropTypes.Requireable<number | undefined>;
/**
 * Check that the value is an integer.
 */
export declare const integer: PropTypes.Requireable<number | undefined>;
/**
 * Check that the value is greater than zero.
 */
export declare const greaterThanZero: PropTypes.Requireable<number | undefined>;
/**
 * Check that the value is an Array of two unique values.
 */
export declare const domain: PropTypes.Requireable<[number, number] | undefined>;
/**
 * Check that the value looks like a d3 `scale` function.
 */
export declare const scale: PropTypes.Requireable<ScaleName | D3Scale<any> | undefined>;
/**
 * Check that an array contains items of the same type.
 */
export declare const homogeneousArray: PropTypes.Requireable<unknown[] | undefined>;
/**
 * Check that array prop length matches props.data.length
 */
export declare const matchDataLength: PropTypes.Requireable<unknown[] | undefined>;
/**
 * Check that the value is a regular expression
 */
export declare const regExp: PropTypes.Requireable<RegExp | undefined>;
//# sourceMappingURL=prop-types.d.ts.map