import React from "react";
import PropTypes from "prop-types";
import { BlockProps } from "../victory-theme/victory-theme";
import { OriginType } from "../victory-label/victory-label";
export interface VictoryClipContainerProps {
    "aria-label"?: string;
    children?: React.ReactElement | React.ReactElement[];
    circleComponent?: React.ReactElement;
    className?: string;
    clipHeight?: number;
    clipId?: number | string;
    clipPadding?: BlockProps;
    clipPathComponent?: React.ReactElement;
    clipWidth?: number;
    events?: React.DOMAttributes<any>;
    groupComponent?: React.ReactElement;
    origin?: OriginType;
    polar?: boolean;
    radius?: number;
    rectComponent?: React.ReactElement;
    translateX?: number;
    translateY?: number;
}
export declare class VictoryClipContainer extends React.Component<VictoryClipContainerProps> {
    static displayName: string;
    static role: string;
    static propTypes: {
        "aria-label": PropTypes.Requireable<string>;
        children: PropTypes.Requireable<string | number | boolean | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
        circleComponent: PropTypes.Requireable<PropTypes.ReactElementLike>;
        className: PropTypes.Requireable<string>;
        clipHeight: PropTypes.Requireable<number | undefined>;
        clipId: PropTypes.Requireable<string | number>;
        clipPadding: PropTypes.Requireable<PropTypes.InferProps<{
            top: PropTypes.Requireable<number>;
            bottom: PropTypes.Requireable<number>;
            left: PropTypes.Requireable<number>;
            right: PropTypes.Requireable<number>;
        }>>;
        clipPathComponent: PropTypes.Requireable<PropTypes.ReactElementLike>;
        clipWidth: PropTypes.Requireable<number | undefined>;
        events: PropTypes.Requireable<object>;
        groupComponent: PropTypes.Requireable<PropTypes.ReactElementLike>;
        origin: PropTypes.Requireable<PropTypes.InferProps<{
            x: PropTypes.Requireable<number | undefined>;
            y: PropTypes.Requireable<number | undefined>;
        }>>;
        polar: PropTypes.Requireable<boolean>;
        radius: PropTypes.Requireable<number | undefined>;
        style: PropTypes.Requireable<object>;
        tabIndex: PropTypes.Requireable<number>;
        transform: PropTypes.Requireable<string>;
        translateX: PropTypes.Requireable<number>;
        translateY: PropTypes.Requireable<number>;
    };
    static defaultProps: {
        circleComponent: JSX.Element;
        rectComponent: JSX.Element;
        clipPathComponent: JSX.Element;
        groupComponent: JSX.Element;
    };
    private clipId;
    constructor(props: VictoryClipContainerProps);
    calculateAttributes(props: any): {
        x: number;
        y: number;
        width: number;
        height: number;
    };
    renderClippedGroup(props: any, clipId: any): React.DetailedReactHTMLElement<any, HTMLElement>;
    renderGroup(props: any): React.DetailedReactHTMLElement<any, HTMLElement>;
    renderClipComponent(props: any, clipId: any): React.DetailedReactHTMLElement<any, HTMLElement>;
    getClipValue(props: any, axis: any): any;
    getTranslateValue(props: any, axis: any): any;
    render(): React.DetailedReactHTMLElement<any, HTMLElement>;
}
//# sourceMappingURL=victory-clip-container.d.ts.map