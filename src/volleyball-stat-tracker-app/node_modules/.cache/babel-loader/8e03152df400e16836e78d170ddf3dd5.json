{"ast":null,"code":"function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n  insert: function (after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n\n      if (after.R) {\n        after = after.R;\n\n        while (after.L) after = after.L;\n\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n    after = node;\n\n    while (parent && parent.C) {\n      grandpa = parent.U;\n\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n\n      parent = after.U;\n    }\n\n    this._.C = false;\n  },\n  remove: function (node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n\n    if (node && node.C) {\n      node.C = false;\n      return;\n    }\n\n    do {\n      if (node === this._) break;\n\n      if (node === parent.L) {\n        sibling = parent.R;\n\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n\n  return node;\n}\n\nexport default RedBlackTree;","map":{"version":3,"names":["RedBlackTree","_","RedBlackNode","node","U","C","L","R","P","N","prototype","constructor","insert","after","parent","grandpa","uncle","RedBlackFirst","RedBlackRotateLeft","RedBlackRotateRight","remove","sibling","left","right","next","red","tree","p","q"],"sources":["/Users/angeloalcantara/Projects/Volleyball-Stat-Tracker/src/volleyball-stat-tracker-app/node_modules/d3-voronoi/src/RedBlackTree.js"],"sourcesContent":["function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}