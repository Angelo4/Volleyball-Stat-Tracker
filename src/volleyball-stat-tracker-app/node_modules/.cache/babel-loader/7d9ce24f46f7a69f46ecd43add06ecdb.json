{"ast":null,"code":"var _jsxFileName = \"/Users/angeloalcantara/Projects/Volleyball-Stat-Tracker/src/volleyball-stat-tracker-app/src/components/vb_action_center/ActionSnackbar.tsx\";\nimport { Snackbar } from '@mui/material';\nimport React from 'react';\nimport MuiAlert from '@mui/material/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\n\nconst ActionSnackbar = props => {\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    props.setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: props.open,\n    autoHideDuration: 3000,\n    onClose: handleSnackbarClose,\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: handleSnackbarClose,\n      severity: props.severity,\n      sx: {\n        width: '100%'\n      },\n      children: props.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = ActionSnackbar;\nexport default ActionSnackbar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"ActionSnackbar\");","map":{"version":3,"names":["Snackbar","React","MuiAlert","Alert","forwardRef","props","ref","ActionSnackbar","handleSnackbarClose","event","reason","setOpen","open","severity","width","message"],"sources":["/Users/angeloalcantara/Projects/Volleyball-Stat-Tracker/src/volleyball-stat-tracker-app/src/components/vb_action_center/ActionSnackbar.tsx"],"sourcesContent":["import { AlertProps, Snackbar } from '@mui/material';\nimport React, { Dispatch, SetStateAction } from 'react';\nimport MuiAlert, { AlertColor } from '@mui/material/Alert';\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\n  props,\n  ref\n) {\n  return <MuiAlert elevation={6} ref={ref} variant='filled' {...props} />;\n});\n\ntype Dispatcher<S> = Dispatch<SetStateAction<S>>;\n\ntype Props = {\n  message: string;\n  severity?: AlertColor;\n  open: boolean;\n  setOpen: Dispatcher<boolean>;\n};\n\nconst ActionSnackbar = (props: Props) => {\n  const handleSnackbarClose = (\n    event?: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      open={props.open}\n      autoHideDuration={3000}\n      onClose={handleSnackbarClose}\n    >\n      <Alert\n        onClose={handleSnackbarClose}\n        severity={props.severity}\n        sx={{ width: '100%' }}\n      >\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default ActionSnackbar;\n"],"mappings":";AAAA,SAAqBA,QAArB,QAAqC,eAArC;AACA,OAAOC,KAAP,MAAgD,OAAhD;AACA,OAAOC,QAAP,MAAqC,qBAArC;;AAEA,MAAMC,KAAK,gBAAGF,KAAK,CAACG,UAAN,MAA6C,SAASD,KAAT,CACzDE,KADyD,EAEzDC,GAFyD,EAGzD;EACA,oBAAO,QAAC,QAAD;IAAU,SAAS,EAAE,CAArB;IAAwB,GAAG,EAAEA,GAA7B;IAAkC,OAAO,EAAC,QAA1C;IAAA,GAAuDD;EAAvD;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CALa,CAAd;MAAMF,K;;AAgBN,MAAMI,cAAc,GAAIF,KAAD,IAAkB;EACvC,MAAMG,mBAAmB,GAAG,CAC1BC,KAD0B,EAE1BC,MAF0B,KAGvB;IACH,IAAIA,MAAM,KAAK,WAAf,EAA4B;MAC1B;IACD;;IACDL,KAAK,CAACM,OAAN,CAAc,KAAd;EACD,CARD;;EAUA,oBACE,QAAC,QAAD;IACE,IAAI,EAAEN,KAAK,CAACO,IADd;IAEE,gBAAgB,EAAE,IAFpB;IAGE,OAAO,EAAEJ,mBAHX;IAAA,uBAKE,QAAC,KAAD;MACE,OAAO,EAAEA,mBADX;MAEE,QAAQ,EAAEH,KAAK,CAACQ,QAFlB;MAGE,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAT,CAHN;MAAA,UAKGT,KAAK,CAACU;IALT;MAAA;MAAA;MAAA;IAAA;EALF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CA1BD;;MAAMR,c;AA4BN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}